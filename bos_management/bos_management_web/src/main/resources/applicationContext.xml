<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd


						http://cxf.apache.org/jaxws
						http://cxf.apache.org/schemas/jaxws.xsd">

    <!-- 连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.17.128:1521:ORCL"/>
        <property name="user" value="sykd_heima290"/>
        <property name="password" value="1234"/>
    </bean>

    <!-- spring整合JPA -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描实体类所在的包 -->
        <property name="packagesToScan" value="com.itheima.bos.domain"/>
        <!-- 指定持久层提供者为Hibernate -->
        <property name="persistenceProvider">
            <bean class="org.hibernate.ejb.HibernatePersistence"/>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- 自动建表 -->
                <property name="generateDdl" value="true"/>
                <property name="database" value="ORACLE"/>
                <property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 组件扫描 @Server @Controller @Repository -->
    <context:component-scan base-package="com.itheima.bos"/>

    <!-- 事务注解支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 整合 spring data jpa -->
    <jpa:repositories base-package="com.itheima.bos.dao"/>

    <!--注册客户端代理对象,用于Webservice远程调用CRM服务-->
    <jaxws:client id="crmClient" address="http://localhost:8082/webservice/customer"
                  serviceClass="com.itheima.crm.cxf.CustomerService"></jaxws:client>

    <!--注册订单服务-->
    <jaxws:server id="orderService" address="/order">
        <jaxws:serviceBean>
            <ref bean="orderServiceImpl"/>
        </jaxws:serviceBean>
    </jaxws:server>

    <!-- shiro的过滤器工厂，通过这个工厂可以创建一些过滤器，这些过滤器可以进行权限校验 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 注入登录页面访问URL -->
        <property name="loginUrl" value="/login.jsp"/>
        <!-- 注入登录成功后跳转的页面访问URL -->
        <property name="successUrl" value="/index.jsp"/>
        <!-- 注入权限不足访问URL -->
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <!-- 注入安全管理器对象 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 注入URL权限访问控制拦截规则 -->
        <property name="filterChainDefinitions">
            <!--
                authc:是shiro框架提供的的一个过滤器的别名，用于判断当前用户是否已经完成认证。
                        如果完成了认证放行，如果没有完成认证，跳转到登录页面
                anon:是shiro框架提供的一个过滤器的别名，经过这个过滤器表示当前访问URL可以匿名访问
             -->
            <value>
                /login.jsp = anon
                /images/** = anon
                /js/** = anon
                /css/** = anon
                /validatecode.jsp* = anon
                /userAction_login.action = anon
                /pages/base/area.jsp = perms['area']
                /logout=logout
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 注册安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="bosRealm"/>
    </bean>

    <!-- 注册自定义realm -->
    <bean id="bosRealm" class="com.itheima.bos.service.system.BosRealm"></bean>

    <!--开启shiro注解-->
    <bean id="defaultAdvisorAutoProxyCreator"
          class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <!--强制基于cglib方式创建代理对象-->
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <!--切面:通知+切点-->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--事务注解支持.proxy-target-class="true":强势使用cglib代理-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
</beans>
